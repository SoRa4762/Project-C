// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  password    String
  role        String    @default("user")
  createdAt   DateTime  @default(now())
} 

model Citizenship {
  citizen_id            String    @id
  national_id_number    String    @unique
  passport_number       String?   @unique
  other_identification  String?   

  PersonaInformation     PersonalInformation?
  ResidentalInformation   ResidentalInformation?
  EconomicInformation     EconomicInformation?
  HealthInformation       HealthInformation?
  DemographicInformation  DemographicInformation?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PersonalInformation {
  person_id             Int           @id @default(autoincrement())
  first_name            String
  last_name             String
  age                   Int
  gender                String
  date_of_birth         DateTime
  nationality           String
  marital_status        String
  citizen_id            String        @unique
  Citizenship           Citizenship   @relation(fields: [citizen_id], references: [citizen_id])

  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
}

model ResidentalInformation {
  residence_id          Int           @id @default(autoincrement())
  address               String        
  household_size        Int
  ownership_status      String
  citizen_id            String        @unique
  Citizenship           Citizenship   @relation(fields: [citizen_id], references: [citizen_id])

  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
}

model EconomicInformation {
  economic_id           Int           @id @default(autoincrement())
  occupation            String
  employment_status     String
  income_level          String
  income_source         String
  education_level       String
  citizen_id            String        @unique
  Citizenship           Citizenship   @relation(fields: [citizen_id], references: [citizen_id])

  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
}

model HealthInformation {
  health_id             Int           @id @default(autoincrement())
  disabilities          String
  chronic_diseases      String
  access_to_healthcare  String
  citizen_id            String        @unique
  Citizenship           Citizenship   @relation(fields: [citizen_id], references: [citizen_id])

  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
}

model DemographicInformation {
  demographic_id        Int           @id @default(autoincrement())
  ethnicity             String
  religion              String
  primary_language      String
  secondary_language    String
  citizen_id            String        @unique
  Citizenship           Citizenship   @relation(fields: [citizen_id], references: [citizen_id])

  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
}